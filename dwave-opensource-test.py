# German Kolmakov, Shaina Raklyar, Berk Olmez, City University of New York, 2024
# Testing D-Wave code with various solvers
# This code has MIT license
# Email gkolmakov@citytech.cuny.edu with any questions

import numpy as np
from dwave.system import EmbeddingComposite, DWaveSampler, LeapHybridSampler
from dimod.core.sampler import Sampler
from dimod.reference.samplers.identity_sampler import IdentitySampler
import dimod


Q = {('q_0_0', 'q_0_0'): -0.1053359375, ('q_0_1', 'q_0_1'): -0.20934375, ('q_0_2', 'q_0_2'): -0.413375, ('q_0_3', 'q_0_3'): -0.8055, ('q_1_0', 'q_1_0'): -0.8360624999999999, ('q_1_1', 'q_1_1'): -1.6302499999999998, ('q_1_2', 'q_1_2'): -3.093, ('q_1_3', 'q_1_3'): -5.516, ('q_2_0', 'q_2_0'): -0.8181875, ('q_2_1', 'q_2_1'): -1.5932499999999998, ('q_2_2', 'q_2_2'): -3.014, ('q_2_3', 'q_2_3'): -5.337999999999999, ('q_0_1', 'q_0_0'): 0.0026562500000000006, ('q_0_2', 'q_0_0'): 0.005312500000000001, ('q_0_3', 'q_0_0'): 0.010625000000000002, ('q_0_2', 'q_0_1'): 0.010625000000000002, ('q_0_3', 'q_0_1'): 0.021250000000000005, ('q_0_3', 'q_0_2'): 0.04250000000000001, ('q_0_1', 'q_1_0'): 0.0056250000000000015, ('q_0_2', 'q_1_0'): 0.011250000000000003, ('q_0_3', 'q_1_0'): 0.022500000000000006, ('q_0_2', 'q_1_1'): 0.022500000000000006, ('q_0_3', 'q_1_1'): 0.04500000000000001, ('q_0_3', 'q_1_2'): 0.09000000000000002, ('q_0_1', 'q_2_0'): 0.01125, ('q_0_2', 'q_2_0'): 0.0225, ('q_0_3', 'q_2_0'): 0.045, ('q_0_2', 'q_2_1'): 0.045, ('q_0_3', 'q_2_1'): 0.09, ('q_0_3', 'q_2_2'): 0.18, ('q_1_1', 'q_0_0'): 0.0056250000000000015, ('q_1_2', 'q_0_0'): 0.011250000000000003, ('q_1_3', 'q_0_0'): 0.022500000000000006, ('q_1_2', 'q_0_1'): 0.022500000000000006, ('q_1_3', 'q_0_1'): 0.04500000000000001, ('q_1_3', 'q_0_2'): 0.09000000000000002, ('q_1_1', 'q_1_0'): 0.08374999999999999, ('q_1_2', 'q_1_0'): 0.16749999999999998, ('q_1_3', 'q_1_0'): 0.33499999999999996, ('q_1_2', 'q_1_1'): 0.33499999999999996, ('q_1_3', 'q_1_1'): 0.6699999999999999, ('q_1_3', 'q_1_2'): 1.3399999999999999, ('q_1_1', 'q_2_0'): 0.049375, ('q_1_2', 'q_2_0'): 0.09875, ('q_1_3', 'q_2_0'): 0.1975, ('q_1_2', 'q_2_1'): 0.1975, ('q_1_3', 'q_2_1'): 0.395, ('q_1_3', 'q_2_2'): 0.79, ('q_2_1', 'q_0_0'): 0.01125, ('q_2_2', 'q_0_0'): 0.0225, ('q_2_3', 'q_0_0'): 0.045, ('q_2_2', 'q_0_1'): 0.045, ('q_2_3', 'q_0_1'): 0.09, ('q_2_3', 'q_0_2'): 0.18, ('q_2_1', 'q_1_0'): 0.049375, ('q_2_2', 'q_1_0'): 0.09875, ('q_2_3', 'q_1_0'): 0.1975, ('q_2_2', 'q_1_1'): 0.1975, ('q_2_3', 'q_1_1'): 0.395, ('q_2_3', 'q_1_2'): 0.79, ('q_2_1', 'q_2_0'): 0.08625000000000001, ('q_2_2', 'q_2_0'): 0.17250000000000001, ('q_2_3', 'q_2_0'): 0.34500000000000003, ('q_2_2', 'q_2_1'): 0.34500000000000003, ('q_2_3', 'q_2_1'): 0.6900000000000001, ('q_2_3', 'q_2_2'): 1.3800000000000001, ('q_0_0', 'q_1_0'): 0.0028125000000000008, ('q_0_1', 'q_1_1'): 0.011250000000000003, ('q_0_2', 'q_1_2'): 0.04500000000000001, ('q_0_3', 'q_1_3'): 0.18000000000000005, ('q_0_0', 'q_2_0'): 0.005625, ('q_0_1', 'q_2_1'): 0.0225, ('q_0_2', 'q_2_2'): 0.09, ('q_0_3', 'q_2_3'): 0.36, ('q_1_0', 'q_2_0'): 0.0246875, ('q_1_1', 'q_2_1'): 0.09875, ('q_1_2', 'q_2_2'): 0.395, ('q_1_3', 'q_2_3'): 1.58}

sampler=LeapHybridSampler()
sample_set=sampler.sample_qubo(Q)


samples = sample_set.samples()
print(samples[0])
#print(sample_set)




